{
  "title": "创建连接",
  "template": "form",
  "fields": [
    {
      "key": "id",
      "label": "ID",
      "type": "text",
      "required": true
    },
    {
      "key": "name",
      "label": "名称",
      "type": "text",
      "required": true
    },
    {
      "key": "port",
      "label": "端口",
      "type": "number",
      "required": true
    },
    {
      "key": "multiple",
      "type": "switch",
      "label": "多入模式"
    },
    {
      "key": "register",
      "type": "switch",
      "label": "启用注册包",
      "condition": {
        "key": "multiple",
        "type": "=",
        "value": true
      }
    },
    {
      "key": "register_options",
      "label": "注册参数",
      "type": "object",
      "condition": {
        "key": "register",
        "type": "=",
        "value": true
      },
      "children": [
        {
          "key": "type",
          "label": "数据类型",
          "type": "select",
          "options": [
            {
              "value": "string",
              "label": "字符串"
            },
            {
              "value": "hex",
              "label": "二进制"
            },
            {
              "value": "json",
              "label": "JSON包"
            }
          ]
        },
        {
          "key": "regex",
          "label": "正则表达式",
          "type": "text"
        },
        {
          "key": "field",
          "label": "JSON字段",
          "type": "text"
        }
      ]
    },
    {
      "key": "protocol",
      "label": "协议",
      "type": "select",
      "options": [],
      "change_action": {
        "type": "script",
        "script": "setTimeout(()=>this.load_protocol_option(), 200)"
      }
    },
    {
      "key": "protocol_options",
      "label": "协议参数",
      "type": "object",
      "children": []
    }
  ],
  "submit_api": "tcp-server/server/create",
  "submit_success": "this.navigate('/page/tcp-server/server-detail?id='+data.id)",
  "mount": "this.load_protocols()",
  "methods": {
    "load_protocols": "this.request.get('iot/protocol/list').subscribe(res=>{this.content.fields[6].options=res.data.map(d=>{return {value:d.name,label:d.description}}); setTimeout(()=>this.load_protocol_option(), 200);  })",
    "load_protocol_option": "this.editor.value.protocol && this.request.get('iot/protocol/'+this.editor.value.protocol).subscribe(res=>{this.content.fields[7].children=res.options; setTimeout(()=>this.editor.rebuild(), 200)})"
  }
}